@page "/"
@using UniWeb.Data.Models;
@using UniWeb.Services;
@inject StockServices stockServices
@inject NavigationManager Navigation

<PageTitle>Watchlist</PageTitle>

<div class="container mt-5">
    <div class="row mt-5">
        <div class="col-md-12">
            <div class="stock-list">
                @if (currentStocks.Any())
                {
                    @foreach (var stock in currentStocks)
                    {
                        <div class="stock-card" @onclick="() => ShowStockDetails(stock.Id)">
                            <img src="@($"data:{stock.ImageType};base64,{Convert.ToBase64String(stock.ImageData)}")" alt="Stock Image" class="stock-image" />
                            <div class="stock-details">
                                <h5 class="stock-title">@((stock.Name != null) ? stock.Name : "-")</h5>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No stocks in the database.</p>
                }
            </div>
            <div class="pagination d-flex justify-content-end">
                <!-- justify-content-end för att placera till höger -->
                @if (currentPage > 1)
                {
                    <button class="btn btn-primary me-2" @onclick="PreviousPage">Previous</button> <!-- me-2 för att lägga till marginal till höger -->
                }
                @if (currentPage < totalPages)
                {
                    <button class="btn btn-primary" @onclick="NextPage">Next</button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<Stock> allStocks = new List<Stock>();
    private List<Stock> currentStocks = new List<Stock>();
    private int itemsPerPage = 9;
    private int currentPage = 1;
    private int totalPages;

    protected override void OnInitialized()
    {
        allStocks = stockServices.GetAllStocks();
        totalPages = (int)Math.Ceiling((double)allStocks.Count / itemsPerPage);
        UpdateCurrentStocks();
    }

    private void UpdateCurrentStocks()
    {
        int startIndex = (currentPage - 1) * itemsPerPage;
        int endIndex = Math.Min(startIndex + itemsPerPage, allStocks.Count);
        currentStocks = allStocks.GetRange(startIndex, endIndex - startIndex);
    }

    private void ShowStockDetails(int stockId)
    {
        Navigation.NavigateTo($"/stockdetails/{stockId}");
    }

    private void PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            UpdateCurrentStocks();
        }
    }

    private void NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            UpdateCurrentStocks();
        }
    }
}

<style>
    .stock-list {
        display: flex;
        flex-wrap: wrap;
        gap: 16px; /* Justera efter önskad mellanrum mellan korten */
    }

    .stock-card {
        flex: 0 0 calc(33.33% - 16px); /* Anpassa efter önskad kolumnbredd */
        max-width: calc(33.33% - 16px); /* Anpassa efter önskad kolumnbredd */
        box-sizing: border-box;
        position: relative;
        overflow: hidden;
        border: 2px groove; /* Ändra tjocklek och färg på kanterna här */
        border-radius: 8px;
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.1); /* Lägg till en subtil skugga */
        transition: transform 0.3s ease-in-out;
        cursor: pointer;
    }

        .stock-card:hover {
            transform: scale(1.05); /* Justera önskad förstoringseffekt vid hover */
        }

    .stock-image {
        object-fit: cover;
        height: 200px; /* Anpassa efter önskad höjd för bilder */
        width: 100%;
    }

    .stock-details {
        padding: 16px;
    }

        .stock-details h5 {
            margin-bottom: 8px;
        }

    .pagination {
        margin-top: 20px;
    }
</style>