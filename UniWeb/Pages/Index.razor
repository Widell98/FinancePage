@page "/"
@using UniWeb.Data.Models;
@using UniWeb.Services;
@inject StockServices stockServices
@inject NavigationManager Navigation

<PageTitle>Watchlist</PageTitle>

<div class="container mt-3">
    <h1>WatchList</h1>
</div>

<div class="container mt-5">
    <div class="stock-container">
        @if (currentStocks.Any())
        {
            @foreach (var stock in currentStocks)
            {
                <div class="stock-card" @onclick="() => ShowStockDetails(stock.Id)">
                    <img src="@($"data:{stock.LogoImageType};base64,{Convert.ToBase64String(stock.LogoImageData)}")"
                         alt="Stock Image" class="stock-image" />
                    <div class="stock-card-content">
                        <h3 class="stock-card-title">@((stock.Name != null) ? stock.Name : "-")</h3>
                        <p class="stock-card-description">Sector: @stock.sector</p>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No stocks in the database.</p>
        }
    </div>

    <div class="pagination d-flex justify-content-end mt-3">
        @if (currentPage > 1)
        {
            <button class="btn btn-primary me-2" @onclick="PreviousPage">Previous</button>
        }
        @if (currentPage < totalPages)
        {
            <button class="btn btn-primary" @onclick="NextPage">Next</button>
        }
    </div>
</div>

@code {
    private List<Stock> allStocks = new List<Stock>();
    private List<Stock> currentStocks = new List<Stock>();
    private int itemsPerPage = 12;
    private int currentPage = 1;
    private int totalPages;

    protected override void OnInitialized()
    {
        allStocks = stockServices.GetAllStocks();
        totalPages = (int)Math.Ceiling((double)allStocks.Count / itemsPerPage);
        UpdateCurrentStocks();
    }

    private void UpdateCurrentStocks()
    {
        int startIndex = (currentPage - 1) * itemsPerPage;
        int endIndex = Math.Min(startIndex + itemsPerPage, allStocks.Count);
        currentStocks = allStocks.GetRange(startIndex, endIndex - startIndex);
    }

    private void ShowStockDetails(int stockId)
    {
        Navigation.NavigateTo($"/stockdetails/{stockId}");
    }

    private void FilterStocksBySector(Sector sector)
    {
        currentStocks = allStocks.Where(s => s.sector == sector).ToList();
        currentPage = 1;
    }

    private void ClearFilter()
    {
        currentStocks = allStocks;
        currentPage = 1;
    }

    private void PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            UpdateCurrentStocks();
        }
    }

    private void NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            UpdateCurrentStocks();
        }
    }
}
