@page "/stockdetails/{id:int}"
@using UniWeb.Data.Models
@using UniWeb.Services
@using UniWebServer.Data.Models
@inject StockServices stockServices

<h2>Detaljer för aktien</h2>

@if (stock != null)
{
    <div style="margin-bottom: 20px;">
        <h3>@stock.Name</h3>
        @if (stock.AnalysisImageData != null)
        {
            <img src="data:@stock.AnalysisImageType;base64,@Convert.ToBase64String(stock.AnalysisImageData)" alt="Analysbild" style="width: 100%; max-height: 400px;" />
        }
        <p>@stock.Description</p>
    </div>
}
else
{
    <p>Laddar aktiedata...</p>
}

<h3>Historik</h3>
@if (stockHistory != null && stockHistory.Any())
{
    <ul>
        @foreach (var history in stockHistory)
        {
            <li>
                <button @onclick="() => LoadAnalysis(history.Id)" class="btn btn-link">
                    @history.UploadDate.ToString("yyyy-MM-dd"): @history.Description
                </button>
            </li>
        }
    </ul>
}
else
{
    <p>Ingen historik tillgänglig för denna aktie.</p>
}

@if (selectedHistory != null)
{
    <h4>Vald analys</h4>
    <div style="margin-top: 20px;">
        @if (!string.IsNullOrEmpty(selectedHistory.AnalysisImagePath))
        {
            <img src="@selectedHistory.AnalysisImagePath" alt="Vald analysbild" style="width: 100%; max-height: 400px;" />
        }
        <p>@selectedHistory.Description</p>
        <p><strong>Datum:</strong> @selectedHistory.UploadDate.ToString("yyyy-MM-dd")</p>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    private Stock stock;
    private List<StockHistory> stockHistory = new();
    private StockHistory selectedHistory;

    /// Initierar sidan och hämtar data för aktien och dess historik
    protected override async Task OnInitializedAsync()
    {
        stock = stockServices.GetStockById(Id);
        stockHistory = stockServices.GetStockHistory(Id);
    }

    /// Laddar en specifik analys från historiken
    private void LoadAnalysis(int historyId)
    {
        selectedHistory = stockHistory.FirstOrDefault(h => h.Id == historyId);
    }
}
